{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","value","onChange","Notification","message","error","notificationColor","notificationStyle","color","fontSize","padding","background","borderColor","borderStyle","borderRadius","marginBottom","style","PersonForm","onSubmit","nameInputValue","onChangeNameInput","numberInputValue","onChangeNumberInput","buttonText","type","Persons","persons","onClickDelete","map","person","name","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","request","put","console","log","delete","App","useState","setPersons","useEffect","personService","initialPersons","newName","setNewName","newNumber","setNewNumber","notificationMessage","setNotificationMessage","errorStatus","setErrorStatus","showAll","setShowAll","newFilterName","setNewFilterName","personsToShow","filter","toLowerCase","includes","event","changedFilterName","target","preventDefault","length","p","find","undefined","window","confirm","changedPerson","returnedPerson","setTimeout","catch","concat","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c157d897.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ value, onChange }) => (\n  <form>\n    <div>filter shown with: <input value={value} onChange={onChange} /></div>\n  </form>\n)\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ message, error }) => {\n  if (message === null) {\n    return null\n  }\n\n  const notificationColor = error ? 'red' : 'green'\n\n  const notificationStyle = {\n    color: notificationColor,\n    fontSize: 20,\n    padding: 5,\n    background: 'lightgrey',\n    borderColor: notificationColor,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    marginBottom: 7\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst PersonForm = ({ onSubmit, nameInputValue, onChangeNameInput, numberInputValue, onChangeNumberInput, buttonText }) => (\n  <form onSubmit={onSubmit}>\n    <div>name: <input value={nameInputValue} onChange={onChangeNameInput} /></div>\n    <div>number: <input value={numberInputValue} onChange={onChangeNumberInput} /></div>\n    <div><button type=\"submit\">{buttonText}</button></div>\n  </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, onClickDelete }) => {\n  return persons.map(person =>\n    <div key={person.id}>\n      {person.name} {person.number} <button onClick={() => onClickDelete(person)}>delete</button>\n    </div>\n  )\n}\n\nexport default Persons","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  console.log(\"AXIOS.PUT EXECUTED\")\n  console.log(request)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const [newName, setNewName] = useState('')\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const [newNumber, setNewNumber] = useState('')\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  const [errorStatus, setErrorStatus] = useState(false)\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (newName.length === 0 || newNumber.length === 0) {\n      return\n    }\n\n    const p = persons.find(person => person.name === newName)\n    if (p !== undefined) {\n      // If the person's name already exists\n\n      //window.alert(`${newName} is already added to phonebook`)\n      if (window.confirm(`${p.name} is already added to phonebook, replace the old number with a new one?`)) {\n        const changedPerson = { ...p, number: newNumber }\n\n        personService\n          .update(p.id, changedPerson)\n          .then(returnedPerson => {\n            console.log(\"after axios.put\")\n            setPersons(persons.map(person => person.id === p.id ? returnedPerson : person))\n            console.log(\"after set persons\")\n            setNewName('')\n            setNewNumber('')\n\n            setNotificationMessage(`Changed ${returnedPerson.name}'s number`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorStatus(true)\n            setNotificationMessage(`Information of ${changedPerson.name} has already been removed from server`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n              setErrorStatus(false)\n            }, 5000)\n          })\n      }\n    }\n    else {\n      // If the person's name is not already present, create a new person\n\n      const newPerson = {\n        name: newName,\n        number: newNumber\n        //id: persons.length + 1\n      }\n\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n\n          setNotificationMessage(`Added ${returnedPerson.name}`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const removePerson = (personToRemove) => {\n    if (window.confirm(`Delete ${personToRemove.name} ?`)) {\n      personService\n        .remove(personToRemove.id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== personToRemove.id))\n\n          setNotificationMessage(`Deleted ${personToRemove.name}`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorStatus(true)\n          setNotificationMessage(`Information of ${personToRemove.name} has already been removed from server`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n            setErrorStatus(false)\n          }, 5000)\n        })\n    }\n  }\n\n  const [showAll, setShowAll] = useState(true)\n\n  const [newFilterName, setNewFilterName] = useState('')\n  const handleFilterNameChange = (event) => {\n    const changedFilterName = event.target.value\n    setNewFilterName(changedFilterName)\n    setShowAll(changedFilterName !== '' ? false : true)\n  }\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilterName.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} error={errorStatus} />\n      <Filter value={newFilterName} onChange={handleFilterNameChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        onSubmit={addPerson}\n\n        nameInputValue={newName}\n        onChangeNameInput={handleNameChange}\n\n        numberInputValue={newNumber}\n        onChangeNumberInput={handleNumberChange}\n\n        buttonText=\"add\" />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} onClickDelete={removePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}